;====================================================================
; Main.asm file generated by New Project wizard
;
; Created:   Sat Apr 20 2024
; Processor: AT89C51
; Compiler:  ASEM-51 (Proteus)
;====================================================================

$NOMOD51
$INCLUDE (8051.MCU)

;====================================================================
; DEFINITIONS

;====================================================================

;====================================================================
; VARIABLES
;====================================================================

;====================================================================
; RESET and INTERRUPT VECTORS
;====================================================================
ORG 00H
LJMP Main

ORG 0003h
LJMP Butt_1
ORG 13H
LJMP Butt_2
ORG 30H
      
;ST_CP = P2.2
;DS = P2.1
;SH_CP = P2.0
;========TIMER 0=========
Timer_0: ;thoi gian dem: 128ms
MOV TMOD, #01h
MOV TL0, LOW(-500)
MOV TH0, HIGH(-500)
SETB TR0
JNB TF0, $
CLR TF0
CLR TR0
RET
;========================
Delay:
      JB IE.6,Delay_slow
      MOV R5, #1 ;thoi gian: 128ms
      JMP Looptimer
   Delay_slow:
      MOV R5,#5 ;thoi gian: 640ms
      Looptimer:
      Call Timer_0
      DJNZ R5, Looptimer
RET
      
Delay1:
      JB IE.6,Delay1_slow
      MOV R5, #3 ;thoi gian: 384ms
      JMP Looptimer1
   Delay1_slow:
      MOV R5,#15 ;thoi gian: 1920ms
      Looptimer1:
      Call Timer_0
      DJNZ R5, Looptimer1
      RET
;========================
SEND_BIT_P0A:
CLR P0.1
MOV R0, #8
Sending_P0A:
RLC A
MOV P0.2, C
SETB P0.0
CLR P0.0
DJNZ R0, Sending_P0A
SETB P0.1
RET
;========================
SEND_BIT_P0B:
CLR P0.4
MOV R0, #8
Sending_P0B:
RLC A
MOV P0.5, C
SETB P0.3
CLR P0.3
DJNZ R0, Sending_P0B
SETB P0.4
RET
;========================
SEND_BIT_P1A:
CLR P1.1
MOV R0, #8
Sending_P1A:
RLC A
MOV P1.0, C
SETB P1.2
CLR P1.2
DJNZ R0, Sending_P1A
SETB P1.1
RET
;========================
SEND_BIT_P1B:
CLR P1.4
MOV R0, #8
Sending_P1B:
RLC A
MOV P1.3, C
SETB P1.5
CLR P1.5
DJNZ R0, Sending_P1B
SETB P1.4
RET
;=======================
SEND_BIT_P2A:
CLR P2.1
MOV R0, #8
Sending_P2A:
RLC A
MOV P2.0, C		;Ghi du lieu vao chan DS
SETB P2.2
CLR P2.2
DJNZ R0, Sending_P2A
SETB P2.1
RET
;========================
SEND_BIT_P2B:
CLR P2.4
MOV R0, #8
Sending_P2B:
RLC A
MOV P2.3, C
SETB P2.5
CLR P2.5
DJNZ R0, Sending_P2B
SETB P2.4
RET
;========================
SEND_BIT_P3A:
CLR P3.1
MOV R0, #8
Sending_P3A:
RLC A
MOV P3.0, C
SETB P3.4
CLR P3.4
DJNZ R0, Sending_P3A
SETB P3.1
RET
;========================
SEND_BIT_P3B:
CLR P3.6
MOV R0, #8
Sending_P3B:
RLC A
MOV P3.7, C			;Chan Data
SETB P3.5			;Chan clock
CLR P3.5
DJNZ R0, Sending_P3B
SETB P3.6			;Chan bat tat latch
RET
;==============================================
ORG 100H
Main:
Call Interrupt_Setting
    Loop:
      CJNE R2, #0, Check_Eff_1
      Call Reset_Led
      JMP Loop
      Check_Eff_1:
      CJNE R2, #1, Check_Eff_2
      call Eff_1
      LJMP Loop
      Check_Eff_2:
      CJNE R2, #2, Check_Eff_3
      Call Eff_2
      LJMP Loop
      Check_Eff_3:
      CJNE R2, #3, Check_Eff_4
      Call Eff_3
      LJMP Loop
      Check_Eff_4:
      CJNE R2, #4, Check_Eff_5
      Call Eff_4
      LJMP Loop
      Check_Eff_5:
      CJNE R2, #5, Check_Eff_6
      Call Eff_5
      LJMP Loop
      Check_Eff_6:
      CJNE R2, #6, Check_Eff_7
      Call Eff_6
      LJMP Loop
      Check_Eff_7:
      CJNE R2, #7, Check_Eff_8
      Call Eff_7
      LJMP Loop
      Check_Eff_8:
      CJNE R2, #8, Check_Eff_9
      Call Eff_8
      LJMP Loop
      Check_Eff_9:
      CJNE R2, #9, Check_Eff_10
      Call Eff_9
      LJMP Loop
      Check_Eff_10:
      CJNE R2, #10, Reset_R2
      Call Eff_10
      LJMP Loop
      Reset_R2:
      MOV R2, #0
      LJMP Loop
;==============================================
Eff_1:

      MOV A, #00h
      Call SEND_BIT_P0A
      MOV A, #00h
      Call SEND_BIT_P0B
      MOV A, #00h
      Call SEND_BIT_P1A
      MOV A, #00h
      Call SEND_BIT_P1B
      MOV A, #00h
      Call SEND_BIT_P2A
      MOV A, #00h
      Call SEND_BIT_P2B
      MOV A, #00h
      Call SEND_BIT_P3A
      MOV A, #00h
      Call SEND_BIT_P3B
      
      CJNE R2, #1, End_Eff_1
      Call Delay1

      End_Eff_1:
RET

Eff_2:
      Call Reset_led
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
MOV R4, #0ffh
Rotate_P0A:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P0A
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #00h, Rotate_P0A

MOV R4, #0ffh
Rotate_P0B:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P0B
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #00h, Rotate_P0B

MOV R4, #0ffh
Rotate_P1A:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P1A
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #00h, Rotate_P1A

MOV R4, #0ffh
Rotate_P1B:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P1B
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #00h, Rotate_P1B

MOV R4, #0ffh
Rotate_P2A:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P2A
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #00h, Rotate_P2A

MOV R4, #0ffh
Rotate_P2B:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P2B
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #00h, Rotate_P2B

MOV R4, #0ffh
Rotate_P3A:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P3A
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #00h, Rotate_P3A

MOV R4, #0ffh
Rotate_P3B:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P3B
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #00h, Rotate_P3B

JMP Continue_Eff_2
LJMP_Eff_2_Here:
RET
Continue_Eff_2:

MOV R4, #00h
Rotate_P0A_1:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P0A
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #0ffh, Rotate_P0A_1

MOV R4, #00h
Rotate_P0B_1:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P0B
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #0ffh, Rotate_P0B_1

MOV R4, #00h
Rotate_P1A_1:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P1A
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #0ffh, Rotate_P1A_1

MOV R4, #00h
Rotate_P1B_1:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P1B
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #0ffh, Rotate_P1B_1

MOV R4, #00h
Rotate_P2A_1:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P2A
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #0ffh, Rotate_P2A_1

MOV R4, #00h
Rotate_P2B_1:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P2B
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #0ffh, Rotate_P2B_1

MOV R4, #00h
Rotate_P3A_1:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P3A
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #0ffh, Rotate_P3A_1

MOV R4, #00h
Rotate_P3B_1:
MOV A, R4
RLC A
MOV R4, A
Call SEND_BIT_P3B
;=====Check========
CJNE R2, #2, LJMP_Eff_2_Here
;=================
Call Delay
CJNE R4, #0ffh, Rotate_P3B_1
End_Eff_2:
RET
;=============================================
Eff_3:
      Call Reset_led
      CJNE R2, #3, End_Eff_3
      MOV A, #0ffh
      Call SEND_BIT_P3B  

      MOV A, #00h
      Call SEND_BIT_P0A

      MOV A, #00h
      Call SEND_BIT_P0B

      MOV A, #00h
      Call SEND_BIT_P1A

      MOV A, #00h
      Call SEND_BIT_P1B

      CJNE R2, #3, End_Eff_3
      Call Delay1
      
      MOV A, #0ffh
      Call SEND_BIT_P0A

      MOV A, #0ffh
      Call SEND_BIT_P0B

      MOV A, #0ffh
      Call SEND_BIT_P1A

      MOV A, #0ffh
      Call SEND_BIT_P1B
      
      MOV A, #00h
      Call SEND_BIT_P2A

      MOV A, #00h
      Call SEND_BIT_P2B

      MOV A, #00h
      Call SEND_BIT_P3A
      
      CJNE R2, #3, End_Eff_3
      Call Delay1
      
      MOV A, #0ffh
      Call SEND_BIT_P2A

      MOV A, #0ffh
      Call SEND_BIT_P2B

      MOV A, #0ffh
      Call SEND_BIT_P3A
      
      MOV A, #00h
      Call SEND_BIT_P3B  
      
      CJNE R2, #3, End_Eff_3
      Call Delay1
      End_Eff_3:
RET
;===============================================
Eff_4:
      Call Reset_led
      CJNE R2, #4, End_Eff_4
      MOV A, #0ffh
      Call SEND_BIT_P0A

      MOV A, #0ffh
      Call SEND_BIT_P0B

      MOV A, #00h
      Call SEND_BIT_P1A
      
      MOV A, #00h
      Call SEND_BIT_P1B
      
      MOV A, #0ffh
      Call SEND_BIT_P2A
      
      MOV A, #0fh
      Call SEND_BIT_P2B
      
      MOV A, #00h
      Call SEND_BIT_P3A
      
      MOV A, #0fh
      Call SEND_BIT_P3B
      
      CJNE R2, #4, End_Eff_4
      Call Delay1
      
      MOV A, #00h
      Call SEND_BIT_P0A

      MOV A, #00h
      Call SEND_BIT_P0B
      
      MOV A, #0ffh
      Call SEND_BIT_P1A
      
      MOV A, #0ffh
      Call SEND_BIT_P1B
      
      MOV A, #00h
      Call SEND_BIT_P2A
      
      MOV A, #0f0h
      Call SEND_BIT_P2B
      
      MOV A, #0ffh
      Call SEND_BIT_P3A
      
      MOV A, #0f0h
      Call SEND_BIT_P3B
      
      CJNE R2, #4, End_Eff_4
      Call Delay1
      End_Eff_4:
RET
;==============================================
Eff_5:
      Call Reset_led
      ;==================
      CJNE R2, #5, End_Eff_5_Temp
      ;==================
      MOV R4, #0ffh
      MOV R1, #0ffh
      Rotate_P0A_P1B:
      MOV A, R4
      RLC A
      MOV R4, A
      Call SEND_BIT_P0A
      MOV A, R1
      RRC A
      MOV R1, A
      Call SEND_BIT_P1B
      ;==================
      CJNE R2, #5, End_Eff_5_Temp
      ;==================
      Call Delay
      CJNE R4, #00h, Rotate_P0A_P1B

      MOV R4, #0ffh
      MOV R1, #0ffh
      Rotate_P0B_P1A:
      MOV A, R4
      RLC A
      MOV R4, A
      Call SEND_BIT_P0B
      MOV A, R1
      RRC A
      MOV R1, A
      Call SEND_BIT_P1A
      ;==================
      CJNE R2, #5, End_Eff_5_Temp
      ;==================
      Call Delay
      CJNE R4, #00h, Rotate_P0B_P1A
      
      MOV R4, #0ffh
      MOV R1, #0ffh
      JMP Continue_Eff_5
      End_Eff_5_Temp:
      RET
      Continue_Eff_5:
      
      Rotate_P2A_P3A:
      MOV A, R4
      RLC A
      MOV R4, A
      Call SEND_BIT_P2A
      MOV A, R1
      RRC A
      MOV R1, A
      Call SEND_BIT_P3A
      ;==================
      CJNE R2, #5, End_Eff_5
      ;==================
      Call Delay
      CJNE R4, #00h, Rotate_P2A_P3A
      
      MOV A, #7eh
      Call SEND_BIT_P2B
      ;==================
      CJNE R2, #5, End_Eff_5
      ;==================      
      Call Delay
      MOV A, #3ch
      Call SEND_BIT_P2B
      ;==================
      CJNE R2, #5, End_Eff_5
      ;==================      
      Call Delay
      MOV A, #18h
      Call SEND_BIT_P2B
      ;==================
      CJNE R2, #5, End_Eff_5
      ;==================
      Call Delay
      MOV A, #00h
      Call SEND_BIT_P2B
      ;==================
      CJNE R2, #5, End_Eff_5
      ;==================
      Call Delay
      MOV A, #0e7h
      Call SEND_BIT_P3B
      ;==================
      CJNE R2, #5, End_Eff_5
      ;==================
      Call Delay
      MOV A, #0c3h
      Call SEND_BIT_P3B
      ;==================
      CJNE R2, #5, End_Eff_5
      ;==================
      Call Delay
      MOV A, #81h
      Call SEND_BIT_P3B
      ;==================
      CJNE R2, #5, End_Eff_5
      ;==================
      Call Delay
      MOV A, #00h
      Call SEND_BIT_P3B
      
      ;==================
      CJNE R2, #5, End_Eff_5
      ;==================
      Call Delay
      End_Eff_5:
RET
;===================================
Eff_6:
      Call Reset_led
      CJNE R2, #6, End_Eff_6
      MOV A, #01010101b
      Call SEND_BIT_P0A
      MOV A, #01010101b
      Call SEND_BIT_P0B
      MOV A, #01010101b
      Call SEND_BIT_P1A
      MOV A, #01010101b
      Call SEND_BIT_P1B
      MOV A, #01010101b
      Call SEND_BIT_P2A
      MOV A, #01010101b
      Call SEND_BIT_P2B
      MOV A, #01010101b
      Call SEND_BIT_P3A
      MOV A, #01010101b
      Call SEND_BIT_P3B
      
      CJNE R2, #6, End_Eff_6
      Call Delay1
      
      MOV A, #10101010b
      Call SEND_BIT_P0A
      MOV A, #10101010b
      Call SEND_BIT_P0B
      MOV A, #10101010b
      Call SEND_BIT_P1A
      MOV A, #10101010b
      Call SEND_BIT_P1B
      MOV A, #10101010b
      Call SEND_BIT_P2A
      MOV A, #10101010b
      Call SEND_BIT_P2B
      MOV A, #10101010b
      Call SEND_BIT_P3A
      MOV A, #10101010b
      Call SEND_BIT_P3B
      
      CJNE R2, #6, End_Eff_6
      Call Delay1
      
      End_Eff_6:
RET
;========================================
Eff_7:
      Call Reset_led
      ;==================
      CJNE R2, #7, End_Eff_7
      ;==================  
      MOV R3,#0ffh
      Effect7_1:
      MOV A,R3
      RLC A
      MOV R3,A
      Call SEND_BIT_P0A
      MOV A,R3
      Call SEND_BIT_P2A
      ;==================
      CJNE R2, #7, End_Eff_7
      ;==================      
      Call Delay
      CJNE R3,#00h,Effect7_1
      
      MOV R3,#0ffh
      Effect7_2:
      MOV A,R3
      RLC A
      MOV R3,A
      Call SEND_BIT_P0B
      MOV A,R3
      Call SEND_BIT_P2B

      ;==================
      CJNE R2, #7, End_Eff_7
      ;==================
      Call Delay
      CJNE R3,#00h,Effect7_2
      
      MOV R3,#0ffh
      Effect7_3:
      MOV A,R3
      RLC A
      MOV R3,A
      Call SEND_BIT_P1A
      MOV A,R3
      Call SEND_BIT_P3A

      ;==================
      CJNE R2, #7, End_Eff_7
      ;==================
      Call Delay
      CJNE R3,#00h,Effect7_3
      
      MOV R3,#0ffh
      Effect7_4:
      MOV A,R3
      RLC A
      MOV R3,A
      Call SEND_BIT_P1B
      MOV A,R3
      Call SEND_BIT_P3B
      ;==================
      CJNE R2, #7, End_Eff_7
      ;==================
      Call Delay
      CJNE R3,#00h,Effect7_4
      End_Eff_7:
RET
;========================
Eff_8:
      Call Reset_led
      CJNE R2, #8, End_Eff_8
      MOV A,#0ffh
      Call SEND_BIT_P0A
      MOV A,#0ffh
      Call SEND_BIT_P0B
      MOV A,#00h
      Call SEND_BIT_P1A
      MOV A,#00h
      Call SEND_BIT_P1B
      MOV A,#00h
      Call SEND_BIT_P2A
      MOV A,#0f0h
      Call SEND_BIT_P2B
      MOV A,#0ffh
      Call SEND_BIT_P3A
      MOV A,#0fh
      Call SEND_BIT_P3B
      
      CJNE R2, #8, End_Eff_8
      Call Delay1
      
      MOV A,#00h
      Call SEND_BIT_P0A
      MOV A,#00h
      Call SEND_BIT_P0B
      MOV A,#0ffh
      Call SEND_BIT_P1A
      MOV A,#0ffh
      Call SEND_BIT_P1B
      MOV A,#0ffh
      Call SEND_BIT_P2A
      MOV A,#0fh
      Call SEND_BIT_P2B
      MOV A,#00h
      Call SEND_BIT_P3A
      MOV A,#0f0h
      Call SEND_BIT_P3B
      
      CJNE R2, #8, End_Eff_8
      Call Delay1
      
      End_Eff_8:
RET

Eff_9:
      Call Reset_led
      CJNE R2, #9, End_Eff_9
      MOV A,#0ffh
      Call SEND_BIT_P0A
      MOV A,#00h
      Call SEND_BIT_P0B
      MOV A,#00h
      Call SEND_BIT_P1A
      MOV A,#0ffh
      Call SEND_BIT_P1B
      MOV A,#3fh
      Call SEND_BIT_P2A
      MOV A,#00h
      Call SEND_BIT_P2B
      MOV A,#0fch
      Call SEND_BIT_P3A
      MOV A,#00h
      Call SEND_BIT_P3B
      
      CJNE R2, #9, End_Eff_9
      Call Delay1
      
      MOV A,#00h
      Call SEND_BIT_P0A
      MOV A,#0ffh
      Call SEND_BIT_P0B
      MOV A,#0ffh
      Call SEND_BIT_P1A
      MOV A,#00h
      Call SEND_BIT_P1B
      MOV A,#0C0h
      Call SEND_BIT_P2A
      MOV A,#0ffh
      Call SEND_BIT_P2B
      MOV A,#03h
      Call SEND_BIT_P3A
      MOV A,#0ffh
      Call SEND_BIT_P3B
      
      CJNE R2, #9, End_Eff_9
      Call Delay1
      
      End_Eff_9:
RET

Eff_10:
      Call Reset_led
      ;===================
      CJNE R2, #10, End_Eff_10_Temp
      ;===================
      MOV R4, #0feh
      MOV R1, #7fh
      Effect10_1:
      MOV A, R4
      Call SEND_BIT_P0A
      MOV A, R4
      RL A
      MOV R4, A
      MOV A, R1
      Call SEND_BIT_P1B
      MOV A, R1
      RR A
      MOV R1, A
      ;===================
      CJNE R2, #10, End_Eff_10_Temp
      ;===================
      JMP Continue_Eff_10
      End_Eff_10_Temp:
      RET
      Continue_Eff_10:
      
      Call Delay
      CJNE R4, #0feh, Effect10_1
      MOV A,#0ffh
      Call SEND_BIT_P0A
      MOV A,#0ffh
      Call SEND_BIT_P1B
      
      MOV R4, #0feh
      MOV R1, #7fh
      Effect10_2:
      MOV A, R4
      Call SEND_BIT_P0B
      MOV A, R4
      RL A
      MOV R4, A
      MOV A, R1
      Call SEND_BIT_P1A
      MOV A, R1
      RR A
      MOV R1, A
      ;===================
      CJNE R2, #10, End_Eff_10
      ;===================      
      Call Delay
      CJNE R4, #0feh, Effect10_2
      MOV A,#0ffh
      Call SEND_BIT_P0B
      MOV A,#0ffh
      Call SEND_BIT_P1A
      
      MOV A,#0e7h
      Call SEND_BIT_P2B
      ;===================
      CJNE R2, #10, End_Eff_10
      ;===================
      Call Delay
      MOV A,#0dbh
      Call SEND_BIT_P2B
      ;===================
      CJNE R2, #10, End_Eff_10
      ;===================
      Call Delay
      MOV A,#0bdh
      Call SEND_BIT_P2B
      ;===================
      CJNE R2, #10, End_Eff_10
      ;===================
      Call Delay
      MOV A,#7eh
      Call SEND_BIT_P2B
      ;===================
      CJNE R2, #10, End_Eff_10
      ;===================
      Call Delay
      MOV A,#0ffh
      Call SEND_BIT_P2B
      
      MOV R4, #7fh
      MOV R1, #0feh

      Effect10_3:
      MOV A, R4
      Call SEND_BIT_P2A
      MOV A, R4
      RR A
      MOV R4, A
      MOV A, R1
      Call SEND_BIT_P3A
      MOV A, R1
      RL A
      MOV R1, A
      ;===================
      CJNE R2, #10, End_Eff_10
      ;===================
      Call Delay
      CJNE R4, #7fh, Effect10_3
      MOV A,#0ffh
      Call SEND_BIT_P2A
      MOV A,#0ffh
      Call SEND_BIT_P3A
      
      MOV A,#7eh
      Call SEND_BIT_P3B
      ;===================
      CJNE R2, #10, End_Eff_10
      ;===================
      Call Delay
      MOV A,#0bdh
      Call SEND_BIT_P3B
      ;===================
      CJNE R2, #10, End_Eff_10
      ;===================
      Call Delay
      MOV A,#0dbh
      Call SEND_BIT_P3B
      ;===================
      CJNE R2, #10, End_Eff_10
      ;===================
      Call Delay
      MOV A,#0e7h
      Call SEND_BIT_P3B
      MOV A,#0ffh
      Call SEND_BIT_P3B
      
      End_Eff_10:
RET
;======Interrupt Setting======
Interrupt_Setting:
MOV IE, #085h
SETB IT0
SETB IT1
MOV R2, #0
RET
;========================
Reset_Led:
      MOV A, #0ffh
      Call SEND_BIT_P0A
      MOV A, #0ffh
      Call SEND_BIT_P0B
      MOV A, #0ffh
      Call SEND_BIT_P1A
      MOV A, #0ffh
      Call SEND_BIT_P1B
      MOV A, #0ffh
      Call SEND_BIT_P2A
      MOV A, #0ffh
      Call SEND_BIT_P2B
      MOV A, #0ffh
      Call SEND_BIT_P3A
      MOV A, #0ffh
      Call SEND_BIT_P3B
RET
;========================

Butt_1:
Call Reset_Led
INC R2
RETi

Butt_2:
CPL IE.6
RETi
      

END
